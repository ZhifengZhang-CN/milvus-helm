{{- if .Values.cluster.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "milvus.readonly.fullname" . }}
  labels:
{{ include "milvus.labels" . | indent 4 }}
{{- if .Values.readonly.service.labels }}
{{ toYaml .Values.readonly.service.labels | indent 4 }}
{{- end }}
    component: "readonly"
{{- with .Values.readonly.service.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if (or (eq .Values.readonly.service.type "ClusterIP") (empty .Values.readonly.service.type)) }}
  type: ClusterIP
  {{- if .Values.readonly.service.clusterIP }}
  clusterIP: {{ .Values.readonly.service.clusterIP }}
  {{end}}
{{- else if eq .Values.readonly.service.type "LoadBalancer" }}
  type: LoadBalancer
  {{- if .Values.readonly.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.readonly.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.readonly.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.readonly.service.loadBalancerSourceRanges | indent 4 }}
  {{- end -}}
{{- else }}
  type: {{ .Values.readonly.service.type }}
{{- end }}
{{- if .Values.readonly.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.readonly.service.externalIPs | indent 4 }}
{{- end }}
  ports:
    - name: engine
      port: {{ .Values.readonly.service.port }}
      protocol: TCP
      targetPort: engine
{{ if (and (eq .Values.readonly.service.type "NodePort") (not (empty .Values.readonly.service.nodePort))) }}
      nodePort: {{.Values.readonly.service.nodePort}}
{{ end }}
    {{- if .Values.network.httpEnabled }}
    - name: web
      port: {{ .Values.network.httpPort }}
      protocol: TCP
      targetPort: web
{{ if (and (eq .Values.readonly.service.type "NodePort") (not (empty .Values.readonly.service.webNodePort))) }}
      nodePort: {{.Values.readonly.service.webNodePort}}
{{ end }}
    {{- end }}
  selector:
{{ include "milvus.matchLabels" . | indent 4 }}
    component: "readonly"
{{- end }}
